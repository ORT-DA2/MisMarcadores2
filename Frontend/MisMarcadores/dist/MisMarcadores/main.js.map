{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/core/notification.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.css","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/service/base-api.service.ts","webpack:///./src/app/service/session.service.ts","webpack:///./src/app/service/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MisMarcadores';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { SessionService } from './service/session.service';\nimport { HomeComponent } from './home/home.component';\nimport { UserService } from './service/user.service';\nimport { BaseApiService } from './service/base-api.service';\n\nconst appRoutes: Routes = [\n  {\n    path: '', component: HomeComponent,\n    children: [\n      { path: 'home', component: HomeComponent },\n      /*{\n        path: 'city',\n        loadChildren: './city/city.module#CityModule',\n      }*/\n    ]\n  },\n  { path: 'login', component: LoginComponent },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    HomeComponent,\n    PageNotFoundComponent,\n  ],\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: false } // <-- debugging purposes only\n    ),\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { NotificationMessage } from './notification-message.interface';\n\n@Injectable()\nexport class NotificationService {\n    messageIn: Subject<NotificationMessage>;\n\n\n    constructor() {\n        this.messageIn = new Subject();\n    }\n\n    display(notification: NotificationMessage) {\n        this.messageIn.next(notification);\n    }\n\n    clear() {\n        this.messageIn.next({\n            message: undefined,\n            severity: undefined\n        });\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p> Home Component</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\" style=\\\"margin-top: 10%\\\">\\n        <div class=\\\"col-4\\\">\\n            <h2>Login</h2>\\n            <form (ngSubmit)=\\\"onSubmit()\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"name\\\">Nombre de usuario</label>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"model.userName\\\" class=\\\"form-control\\\" id=\\\"name\\\" name=\\\"name\\\" required>\\n                </div>\\n\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"password\\\">Contraseña</label>\\n                    <input type=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\">\\n                </div>\\n\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Iniciar Sesión</button>\\n\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { SessionService } from '../service/session.service';\nimport { UserService } from '../service/user.service';\nimport { LoginRequest } from '../interfaces/login-request';\nimport { Session } from '../interfaces/session';\nimport { Router } from '@angular/router';\nimport { NotificationService } from '../core/notification.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: LoginRequest;\n  submitted: boolean;\n\n  constructor(\n    private sessionService: SessionService,\n    private userService: UserService,\n    private router: Router,\n    private notificationService: NotificationService) {\n    this.model = { nombreUsuario: '', contraseña: '' };\n  }\n\n  ngOnInit() {\n  }\n\n  onSubmit() {\n    this.userService.postLogin(this.model).subscribe((response: Session) => {\n\n      if (response) {\n        this.notificationService.display({ message: 'Usuario Logueado!', severity: 'info' });\n\n        this.sessionService.setSession(response);\n\n        if (this.sessionService.isAuthenticated) {\n          this.router.navigate([this.sessionService.attemptedUrl]);\n        }\n      } else {\n        this.notificationService.display({ message: 'Invalid username or password', severity: 'error' });\n      }\n\n    }, () => {\n      this.notificationService.display({ message: 'Error occurred', severity: 'error' });\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row justify-content-center\\\" style=\\\"margin-top: 10%\\\">\\n        <div class=\\\"col-4\\\">\\n            <h3>Page Not Found :(</h3>\\n        </div>        \\n    </div>\\n    <div class=\\\"row justify-content-center\\\" style=\\\"margin-top: 10%\\\">\\n            <h3>{{ message | async }}</h3>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  message: Observable<string>;\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.message = this.route\n      .queryParamMap\n      .pipe(map(params => params.get('message') || ''));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { SessionService } from './session.service';\n\n@Injectable()\nexport class BaseApiService {\n\n    constructor(private http: HttpClient, private sessionService: SessionService) { }\n\n    private basicHeaderConfig = new HttpHeaders({ 'Content-Type': 'application/json' });\n\n    post<T, Y>(url: string, request: T, isTokenRequired: boolean = false): Observable<Y> {\n        return this.http.post<any>(`${environment.apiUrl}/${url}`, request, { headers: this.getHeader(isTokenRequired) });\n    }\n\n    private getHeader(tokenRequired: boolean): HttpHeaders {\n        return tokenRequired ?\n            new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': this.sessionService.getToken() }) :\n            new HttpHeaders({ 'Content-Type': 'application/json' });\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Session } from '../interfaces/session';\n\nconst tokenKey = 'currentToken';\n\n@Injectable()\nexport class SessionService {\n\n\n    attemptedUrl: string;\n    tokenChanged = new Subject<string>();\n\n    constructor() {\n        this.attemptedUrl = 'home';\n    }\n\n    isAuthenticated(): boolean {\n        return this.getToken() !== null;\n    }\n\n    setToken(token: string): void {\n        localStorage.setItem('token', token);\n    }\n\n    removeToken(): void {\n        localStorage.removeItem('token');\n    }\n\n    getToken(): string {\n        return localStorage.getItem('token');\n    }\n\n    setSession(session: Session) {\n        localStorage.setItem('token', session.id);\n        localStorage.setItem('role', session.admin);\n    }\n\n    isAdmin(): boolean {\n        return localStorage.getItem('role') === 'Admin';\n    }\n\n    logOff() {\n        localStorage.removeItem('token');\n        localStorage.removeItem('role');\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { LoginRequest } from '../interfaces/login-request';\nimport { BaseApiService } from './base-api.service';\nimport { Session } from '../interfaces/session';\nimport { UsuarioRequest } from '../interfaces/user-request.interface';\n\n\n@Injectable()\nexport class UserService {\n\n  constructor(private baseApiService: BaseApiService) { }\n\n  postLogin(request: LoginRequest): Observable<Session> {\n    return this.baseApiService.post<LoginRequest, Session>('login', request);\n  }\n\n  registerUser(request: UsuarioRequest): Observable<any> {\n    return this.baseApiService.post<LoginRequest, Session>('users', request, true);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}